{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/overlay-edit/overlay-edit.component.ts","./src/app/components/home/overlay-edit/overlay-edit.component.html","./src/app/components/home/overlay-list/overlay-list.component.ts","./src/app/components/home/overlay-list/overlay-list.component.html","./src/app/components/home/overlay-live-control/overlay-live-control.component.ts","./src/app/components/home/overlay-live-control/overlay-live-control.component.html","./src/app/components/home/overlay-preview/overlay-preview.component.ts","./src/app/components/home/overlay-preview/overlay-preview.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/status/status.component.ts","./src/app/components/status/status.component.html","./src/app/shared/components/button-tile/button-tile.component.ts","./src/app/shared/components/button-tile/button-tile.component.html","./src/app/shared/components/toggle-switch/toggle-switch.component.ts","./src/app/shared/components/toggle-switch/toggle-switch.component.html","./src/app/shared/services/hotkey/hotkey.service.ts","./src/app/shared/services/overlay-server/overlay-server.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SettingsComponent } from './components/settings/settings.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'settings', component: SettingsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'overlay-manager';\n}\n","<app-header> </app-header>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { OverlayListComponent } from './components/home/overlay-list/overlay-list.component';\nimport { StatusComponent } from './components/status/status.component';\nimport { OverlayEditComponent } from './components/home/overlay-edit/overlay-edit.component';\nimport { ButtonTileComponent } from './shared/components/button-tile/button-tile.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ToggleSwitchComponent } from './shared/components/toggle-switch/toggle-switch.component';\nimport { FormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayPreviewComponent } from './components/home/overlay-preview/overlay-preview.component';\nimport { OverlayLiveControlComponent } from './components/home/overlay-live-control/overlay-live-control.component';\n\nconst port = 3000;\nconst host = 'localhost';\nconst authCode = 'sDJZn16TuP7zu82a';\n\nconst config: SocketIoConfig = {\n  url: 'http://' + host + ':' + port,\n  options: {\n    query: 'authentication=' + authCode,\n  },\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SettingsComponent,\n    OverlayListComponent,\n    StatusComponent,\n    OverlayEditComponent,\n    ButtonTileComponent,\n    HeaderComponent,\n    ToggleSwitchComponent,\n    OverlayPreviewComponent,\n    OverlayLiveControlComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    DragDropModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'de',\n    }),\n    SocketIoModule.forRoot(config),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport isElectron from 'is-electron';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  iselectron = false;\n  constructor() {\n    this.iselectron = isElectron();\n   }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<div class=\"header\" id=\"topbar\">\n  <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\"><i aria-hidden=\"true\"\n      class=\"v-icon notranslate mdi mdi-format-align-bottom theme--dark\"></i> {{ 'Overlay Manager' | translate }}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n      aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <ul class=\"navbar-nav mr-auto\">\n      </ul>\n      <ul class=\"navbar-nav\" id=\"topbarnav\">\n        <app-status></app-status>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"/index.html/settings\"><i aria-hidden=\"true\"\n              class=\"v-icon notranslate mdi mdi-cog theme--dark\"></i></a>\n        </li>\n          <li [hidden]=\"!iselectron\" class=\"nav-item electron_window_controll\"><button type=\"button\" id=\"min-btn\" class=\"nav-button btn\"><i aria-hidden=\"true\" class=\"v-icon notranslate mdi mdi-window-minimize theme--dark\"></i></button></li>\n          <li [hidden]=\"!iselectron\" class=\"nav-item electron_window_controll\"><button type=\"button\" id=\"max-btn\" class=\"nav-button btn\"><i aria-hidden=\"true\" class=\"v-icon notranslate mdi mdi-window-maximize theme--dark\"></i></button></li>\n          <li [hidden]=\"!iselectron\" class=\"nav-item electron_window_controll\"><button type=\"button\" id=\"close-btn\" class=\"nav-button btn\"><i aria-hidden=\"true\" class=\"v-icon notranslate mdi mdi-close theme--dark\"></i></button></li>\n      </ul>\n    </div>\n  </nav>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IOverlay } from 'src/app/models/ioverlay';\nimport { HotkeyService } from 'src/app/shared/services/hotkey/hotkey.service';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  constructor(\n    public overlayServerService: OverlayServerService,\n    private hotkeyService: HotkeyService\n  ) {}\n  selectedOverlay: IOverlay;\n  @Output() selectedOverlayChange: EventEmitter<IOverlay>;\n  newCreatedOverlaySubscription: Subscription;\n\n  ngOnInit(): void {\n    this.hotkeyService.addShortcut({ keys: 'esc' }).subscribe(() => {\n      this.closeOverlay();\n    });\n\n    // open overlay when newly created\n    this.overlayServerService.newCreatedOverlay.subscribe(overlay => {\n      this.selectedOverlay = overlay;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.newCreatedOverlaySubscription.unsubscribe();\n  }\n\n  public overlaySelected(overlay: IOverlay): void {\n    this.selectedOverlay = overlay;\n  }\n\n  public closeOverlay(): void {\n    delete this.selectedOverlay;\n  }\n}\n","<div class=\"left-column\">\n  <app-overlay-list\n    [(selectedOverlay)]=\"selectedOverlay\"\n    (selectOverlay)=\"overlaySelected($event)\"\n  ></app-overlay-list>\n</div>\n<div class=\"middle-column\">\n  <div *ngIf=\"selectedOverlay\">\n    <app-overlay-edit\n      [(selectedOverlay)]=\"selectedOverlay\"\n      (closedOverlay)=\"closeOverlay()\"\n    ></app-overlay-edit>\n  </div>\n</div>\n<div class=\"right-column\" *ngIf=\"selectedOverlay\">\n  <!-- <app-overlay-preview\n    [(selectedOverlay)]=\"selectedOverlay\"\n  ></app-overlay-preview> -->\n  <app-overlay-live-control\n    [(selectedOverlay)]=\"selectedOverlay\"\n  ></app-overlay-live-control>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  throttleTime,\n} from 'rxjs/operators';\nimport { IOverlay } from 'src/app/models/ioverlay';\nimport { HotkeyService } from 'src/app/shared/services/hotkey/hotkey.service';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\n\n@Component({\n  selector: 'app-overlay-edit',\n  templateUrl: './overlay-edit.component.html',\n  styleUrls: ['./overlay-edit.component.scss'],\n})\nexport class OverlayEditComponent implements OnInit, OnDestroy {\n  isDraft: boolean;\n  @Input() set selectedOverlay(value: IOverlay) {\n    this.privateSelectedOverlay = value;\n    this.selectedOverlayChanged();\n  }\n  get selectedOverlay(): IOverlay {\n    return this.privateSelectedOverlay;\n  }\n  privateSelectedOverlay: IOverlay;\n  @Output() closedOverlay: EventEmitter<void> = new EventEmitter();\n  formDataChanged: Subject<string> = new Subject<string>();\n  overlayWasDeletedWithIdSubscription: Subscription;\n\n  constructor(\n    public overlayServerService: OverlayServerService,\n    public hotkeyService: HotkeyService\n  ) {}\n\n  ngOnInit(): void {\n    this.overlayWasDeletedWithIdSubscription = this.overlayServerService.overlayWasDeletedWithId.subscribe(\n      (id) => {\n        if (id === this.selectedOverlay.id) {\n          this.closeOverlay();\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hotkeyService.lockTypingHotkeys = false;\n    this.overlayWasDeletedWithIdSubscription.unsubscribe();\n  }\n\n  public debouncedFormChange(): void {\n    if (!this.isDraft) {\n      if (this.formDataChanged.observers.length === 0) {\n        this.formDataChanged.pipe(debounceTime(1000)).subscribe(() => {\n          this.overlayServerService.updateLowerThird(this.selectedOverlay);\n        });\n      }\n      this.formDataChanged.next();\n    }\n  }\n\n  public instantFormChange(): void {\n    if (!this.isDraft) {\n      this.overlayServerService.updateLowerThird(this.selectedOverlay);\n    }\n  }\n\n  private selectedOverlayChanged(): void {\n    this.isDraft =\n      this.overlayServerService.draftOverlay === this.selectedOverlay;\n  }\n\n  public closeOverlay(): void {\n    this.closedOverlay.emit();\n    delete this.selectedOverlay;\n  }\n\n  public onClickSaveButton(): void {\n    this.overlayServerService.addLowerThird(this.selectedOverlay);\n    delete this.overlayServerService.draftOverlay;\n    this.closeOverlay();\n  }\n\n  public onClickDeleteButton(): void {\n    this.overlayServerService.removeLowerThird(this.selectedOverlay);\n    this.closeOverlay();\n  }\n\n  public onClickCancelButton(): void {\n    delete this.overlayServerService.draftOverlay;\n    this.closeOverlay();\n  }\n}\n","<h5>Overlay editieren</h5>\n<div class=\"panel\">\n  <div class=\"panel-body\">\n    <div class=\"form-group\">\n      <label for=\"title\">{{ \"Titel\" | translate }}</label>\n      <input\n        type=\"name\"\n        class=\"form-control\"\n        id=\"title\"\n        placeholder=\"Name der Person\"\n        aria-describedby=\"nameHelp\"\n        [(ngModel)]=\"selectedOverlay.title\"\n        [disabled]=\"selectedOverlay?.readOnly\"\n        (focus)=\"hotkeyService.lockTypingHotkeys = true\"\n        (blur)=\"hotkeyService.lockTypingHotkeys = false\"\n        (keyup)=\"debouncedFormChange()\"\n      />\n      <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">{{ 'First line' | translate }}</small> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"subtitle\">{{ \"Untertitel\" | translate }}</label>\n      <input\n        type=\"name\"\n        class=\"form-control\"\n        id=\"subtitle\"\n        placeholder=\"Rolle oder Untertitel\"\n        aria-describedby=\"nameHelp\"\n        [(ngModel)]=\"selectedOverlay.subtitle\"\n        [disabled]=\"selectedOverlay?.readOnly\"\n        (focus)=\"hotkeyService.lockTypingHotkeys = true\"\n        (blur)=\"hotkeyService.lockTypingHotkeys = false\"\n        (keyup)=\"debouncedFormChange()\"\n      />\n      <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">{{ 'Second line' | translate }}</small> -->\n      <app-toggle-switch\n        [(isChecked)]=\"selectedOverlay.favorit\"\n        [title]=\"'Favorit'\"\n        [description]=\"'in die Auswahl für diese Veranstaltung nehmen'\"\n        [disabled]=\"selectedOverlay?.readOnly\"\n        (isCheckedChange)=\"instantFormChange()\"\n      ></app-toggle-switch>\n      <app-toggle-switch\n        [(isChecked)]=\"selectedOverlay.pinnedToTop\"\n        [title]=\"'Anpinnen'\"\n        [disabled]=\"selectedOverlay?.readOnly\"\n        (isCheckedChange)=\"instantFormChange()\"\n      ></app-toggle-switch>\n      <app-toggle-switch\n        [(isChecked)]=\"selectedOverlay.readOnly\"\n        [title]=\"'Schreibgeschützt'\"\n        (isCheckedChange)=\"instantFormChange()\"\n      ></app-toggle-switch>\n    </div>\n  </div>\n  <div class=\"panel-footer\">\n    <div class=\"left\">\n      <button\n        class=\"btn btn-danger\"\n        (click)=\"onClickDeleteButton()\"\n        *ngIf=\"\n          !isDraft &&\n          !selectedOverlay.readOnly\n        \"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-trash-can theme--dark\"\n        ></i>\n        {{ \"Löschen\" | translate }}\n      </button>\n      <button\n        class=\"btn btn-warning\"\n        (click)=\"onClickCancelButton()\"\n        *ngIf=\"isDraft\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-cancel theme--dark\"\n        ></i>\n        {{ \"Abbrechen\" | translate }}\n      </button>\n    </div>\n\n    <div class=\"right btn-group\">\n      <button\n        class=\"btn btn-dark\"\n        (click)=\"closeOverlay()\"\n        *ngIf=\"!isDraft\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-cancel theme--dark\"\n        ></i>\n        {{ \"Schließen\" | translate }}\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        (click)=\"onClickSaveButton()\"\n        *ngIf=\"isDraft\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-check theme--dark\"\n        ></i>\n        {{ \"Speichern\" | translate }}\n      </button>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { IOverlay } from '../../../models/ioverlay';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { HotkeyService } from 'src/app/shared/services/hotkey/hotkey.service';\n\n@Component({\n  selector: 'app-overlay-list',\n  templateUrl: './overlay-list.component.html',\n  styleUrls: ['./overlay-list.component.scss'],\n})\nexport class OverlayListComponent implements OnInit {\n  showFavorites = false;\n  @Input() selectedOverlay: IOverlay;\n  searchTerm = '';\n  searchResults: IOverlay[] = [];\n  @ViewChild('searchfield') searchfield: ElementRef;\n\n  @Output() selectOverlay = new EventEmitter<IOverlay>();\n\n  constructor(\n    public overlayServerService: OverlayServerService,\n    public hotkeyService: HotkeyService\n  ) {}\n\n  onClick(selectedoverlay: IOverlay): void {\n    this.selectOverlay.emit(selectedoverlay);\n  }\n\n  ngOnInit(): void {\n    this.hotkeyService.addShortcut({ keys: 'F' }, false, true).subscribe(() => {\n      this.showFavorites = !this.showFavorites;\n    });\n    this.hotkeyService.addShortcut({ keys: 'control.f' }).subscribe(() => {\n      this.searchfield.nativeElement.focus();\n    });\n    this.hotkeyService.addShortcut({ keys: 'control.space' }).subscribe(() => {\n      this.searchfield.nativeElement.focus();\n    });\n    this.hotkeyService.addShortcut({ keys: 'esc' }).subscribe(() => {\n      this.cancelSearch();\n      this.showFavorites = false;\n    });\n    this.hotkeyService.addShortcut({ keys: 'ArrowUp' }).subscribe(() => {\n      this.upDownSelect('up');\n    });\n    this.hotkeyService.addShortcut({ keys: 'ArrowDown' }).subscribe(() => {\n      this.upDownSelect('down');\n    });\n    // this.hotkeyService.addShortcut({ keys: 'Enter' }).subscribe(() => {\n    //   console.log('Enter');\n    // });\n  }\n\n  private upDownSelect(direction: 'up' | 'down'): void {\n    let selectionList: IOverlay[];\n    if (this.showFavorites) {\n      // search in pinnend & favorites\n      selectionList = this.overlayServerService.overlays.filter((item) => item.pinnedToTop);\n      selectionList = selectionList.concat(this.overlayServerService.overlays.filter((item) => item.favorit && !item.pinnedToTop));\n    } else if (this.searchTerm) {\n      // search in search results\n      selectionList = this.searchResults;\n    } else {\n      selectionList = this.overlayServerService.overlays.filter((item) => item.pinnedToTop);\n      selectionList = selectionList.concat(this.overlayServerService.overlays.filter((item) => !item.pinnedToTop));\n    }\n\n    // search in pinned & normal list\n    let selectedIndex = selectionList.indexOf(this.selectedOverlay);\n    let nextIndex = 0;\n    if (selectedIndex >= 0) {\n      nextIndex = direction === 'up' ? selectedIndex-1 : selectedIndex+1;\n    }\n    if (nextIndex < selectionList.length && nextIndex >= 0) {\n      this.onClick(selectionList[nextIndex]);\n    }\n  }\n\n  showPinnedToTopDivider(): boolean {\n    return (\n      this.overlayServerService.overlays.filter((e) => e.pinnedToTop).length > 0\n    );\n  }\n\n  showAllDivider(): boolean {\n    return (\n      this.overlayServerService.overlays.filter((e) => !e.pinnedToTop).length >\n      0\n    );\n  }\n\n  public onUserClickedOnNewOverlay(): void {\n    if (this.overlayServerService.draftOverlay) {\n      this.switchToDraftOverlay();\n    } else {\n      this.createDraftOverlayandSwitch();\n    }\n  }\n\n  public onUserClickedOnFavorites(): void {\n    this.resetSearch();\n    this.showFavorites = !this.showFavorites;\n  }\n\n  private resetSearch() {\n    this.searchResults = [];\n    this.searchTerm = '';\n  }\n\n  private switchToDraftOverlay(): void {\n    this.onClick(this.overlayServerService.draftOverlay);\n  }\n\n  private createDraftOverlayandSwitch(): void {\n    this.overlayServerService.draftOverlay = {\n      id: null,\n      design: '',\n      lastChange: Date.now().toString(),\n      favorit: false,\n      pinnedToTop: false,\n      readOnly: false,\n      title: '',\n      subtitle: '',\n    } as IOverlay;\n    this.onClick(this.overlayServerService.draftOverlay);\n  }\n\n  public onUserTypedInSearchBar(): void {\n    this.searchResults = this.searchForOverlay(this.searchTerm);\n  }\n\n  public cancelSearch(): void {\n    this.searchTerm = '';\n    this.searchfield.nativeElement.blur();\n  }\n\n  public searchForOverlay(term: string): IOverlay[] {\n    term = term.toLowerCase();\n    return this.overlayServerService.overlays.filter(\n      (e) =>\n        e.title.toLowerCase().includes(term) ||\n        e.subtitle.toLowerCase().includes(term)\n    );\n  }\n\n  drop(event: CdkDragDrop<string[]>): void {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n  }\n}\n","<div class=\"header\">\n  <button\n    class=\"btn btn-favorites\"\n    (click)=\"onUserClickedOnFavorites()\"\n    [class.active]=\"showFavorites\"\n  >\n    <i\n      *ngIf=\"!showFavorites\"\n      aria-hidden=\"true\"\n      class=\"v-icon notranslate mdi mdi-heart-outline theme--dark\"\n    ></i>\n    <i\n      *ngIf=\"showFavorites\"\n      aria-hidden=\"true\"\n      class=\"v-icon notranslate mdi mdi-heart theme--dark\"\n    ></i>\n    {{ \"Nur Favoriten anzeigen\" | translate }}\n  </button>\n  <div></div>\n  <button class=\"btn btn-primary\" (click)=\"onUserClickedOnNewOverlay()\">\n    <i\n      aria-hidden=\"true\"\n      class=\"v-icon notranslate mdi mdi-plus theme--dark\"\n    ></i>\n    {{ \"Neues Overlay\" | translate }}\n  </button>\n</div>\n\n<ul class=\"list-group overlay-list\">\n  <input\n    #searchfield\n    type=\"search\"\n    placeholder=\"Nach Namen suchen ...\"\n    [(ngModel)]=\"searchTerm\"\n    (keyup)=\"onUserTypedInSearchBar()\"\n    (focus)=\"hotkeyService.lockTypingHotkeys = true\"\n    (blur)=\"hotkeyService.lockTypingHotkeys = false\"\n  />\n\n  <ng-container *ngIf=\"searchTerm\">\n    <div class=\"list-divider\">\n      <i\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-magnify theme--dark\"\n      ></i>\n      {{ \"Suchergebnisse\" | translate }}\n    </div>\n    <ng-container *ngFor=\"let overlay of searchResults\">\n      <app-button-tile\n        [(title)]=\"overlay.title\"\n        [subtitle]=\"overlay.subtitle\"\n        (click)=\"onClick(overlay)\"\n        [selected]=\"selectedOverlay == overlay\"\n        [favorite]=\"overlay.favorit\"\n        [pinned]=\"overlay.pinnedToTop\"\n        [readOnly]=\"overlay.readOnly\"\n      ></app-button-tile>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"!searchTerm\">\n    <div class=\"list-divider\" *ngIf=\"overlayServerService.draftOverlay\">\n      <i\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-file theme--dark\"\n      ></i>\n      {{ \"Nicht gespeichertes Overlay\" | translate }}\n    </div>\n    <app-button-tile\n      *ngIf=\"overlayServerService.draftOverlay\"\n      [(title)]=\"overlayServerService.draftOverlay.title\"\n      [placeholderTitle]=\"'Neues Overlay'\"\n      [(subtitle)]=\"overlayServerService.draftOverlay.subtitle\"\n      [placeholderSubtitle]=\"'Felder ausfüllen und speichern'\"\n      (click)=\"onClick(overlayServerService.draftOverlay)\"\n      [selected]=\"selectedOverlay == overlayServerService.draftOverlay\"\n      [favorite]=\"overlayServerService.draftOverlay.favorit\"\n      [pinned]=\"overlayServerService.draftOverlay.pinnedToTop\"\n      [readOnly]=\"overlayServerService.draftOverlay.readOnly\"\n    ></app-button-tile>\n    <div class=\"list-divider\" *ngIf=\"showPinnedToTopDivider()\">\n      <i\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-pin theme--dark\"\n      ></i>\n      {{ \"Angepinnte Overlays\" | translate }}\n    </div>\n    <div\n      cdkDropList\n      [cdkDropListData]=\"overlayServerService.overlays\"\n      class=\"drag-list\"\n      (cdkDropListDropped)=\"drop($event)\"\n    >\n      <ng-container *ngFor=\"let overlay of overlayServerService.overlays\">\n        <app-button-tile\n          class=\"drag-item\"\n          cdkDrag\n          cdkDragLockAxis=\"y\"\n          *ngIf=\"overlay.pinnedToTop\"\n          [(title)]=\"overlay.title\"\n          [subtitle]=\"overlay.subtitle\"\n          (click)=\"onClick(overlay)\"\n          [selected]=\"selectedOverlay == overlay\"\n          [favorite]=\"overlay.favorit\"\n          [pinned]=\"overlay.pinnedToTop\"\n          [readOnly]=\"overlay.readOnly\"\n        ></app-button-tile>\n      </ng-container>\n    </div>\n    <ng-container *ngIf=\"showFavorites\">\n      <div class=\"list-divider\" *ngIf=\"showFavorites\">\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-heart theme--dark\"\n        ></i>\n        {{ \"Favoriten Overlays\" | translate }}\n      </div>\n      <div\n        cdkDropList\n        [cdkDropListData]=\"overlayServerService.overlays\"\n        class=\"drag-list\"\n        (cdkDropListDropped)=\"drop($event)\"\n      >\n        <ng-container *ngFor=\"let overlay of overlayServerService.overlays\">\n          <app-button-tile\n            class=\"drag-item\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            *ngIf=\"!overlay.pinnedToTop && overlay.favorit\"\n            [(title)]=\"overlay.title\"\n            [subtitle]=\"overlay.subtitle\"\n            (click)=\"onClick(overlay)\"\n            [selected]=\"selectedOverlay == overlay\"\n            [favorite]=\"overlay.favorit\"\n            [pinned]=\"overlay.pinnedToTop\"\n            [readOnly]=\"overlay.readOnly\"\n          ></app-button-tile>\n        </ng-container>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!showFavorites\">\n      <div class=\"list-divider\" *ngIf=\"showAllDivider() && !showFavorites\">\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-message-text theme--dark\"\n        ></i>\n        {{ \"Alle Overlays\" | translate }}\n      </div>\n      <div\n        cdkDropList\n        [cdkDropListData]=\"overlayServerService.overlays\"\n        class=\"drag-list\"\n        (cdkDropListDropped)=\"drop($event)\"\n      >\n        <ng-container *ngFor=\"let overlay of overlayServerService.overlays\">\n          <app-button-tile\n            class=\"drag-item\"\n            cdkDrag\n            cdkDragLockAxis=\"y\"\n            *ngIf=\"!overlay.pinnedToTop\"\n            [(title)]=\"overlay.title\"\n            [subtitle]=\"overlay.subtitle\"\n            (click)=\"onClick(overlay)\"\n            [selected]=\"selectedOverlay == overlay\"\n            [favorite]=\"overlay.favorit\"\n            [pinned]=\"overlay.pinnedToTop\"\n            [readOnly]=\"overlay.readOnly\"\n          ></app-button-tile>\n        </ng-container>\n      </div>\n    </ng-container>\n  </ng-container>\n</ul>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IOverlay } from 'src/app/models/ioverlay';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\n\n@Component({\n  selector: 'app-overlay-live-control',\n  templateUrl: './overlay-live-control.component.html',\n  styleUrls: ['./overlay-live-control.component.scss'],\n})\nexport class OverlayLiveControlComponent implements OnInit {\n  isOverlayShown = false;\n  isAutomationActive = false;\n  isAutomationPaused = false;\n  automationDuration = new Date(10000);\n\n  currentAutomationDuration: Date;\n  currentAutomationStartTime: Date;\n  currentRemainingAutomationTime = new Date(this.automationDuration.getTime());\n  currentAutomationProgress = 100;\n  currentRemainingAutomationTimeString: string;\n\n  @Input() selectedOverlay: IOverlay;\n\n  constructor(public overlayServerService: OverlayServerService) {\n    this.generateTimeString();\n  }\n\n  ngOnInit(): void {\n  }\n\n  private generateTimeString(): void {\n    this.currentRemainingAutomationTimeString =\n      //      this.currentRemainingAutomationTime.getUTCHours().toString().padStart(2, '0') +\n      //      ':' +\n      this.currentRemainingAutomationTime\n        .getUTCMinutes()\n        .toString()\n        .padStart(2, '0') +\n      ':' +\n      this.currentRemainingAutomationTime\n        .getUTCSeconds()\n        .toString()\n        .padStart(2, '0') +\n      '.' +\n      this.currentRemainingAutomationTime\n        .getUTCMilliseconds()\n        .toString()\n        .padStart(3, '0')\n        .slice(0, 2);\n  }\n\n  public onClickShow10Button(): void {\n    this.startAutomation();\n  }\n\n  public onClickPauseCountdownButton(): void {\n    this.pauseAutomation();\n  }\n\n  public onClickResumeCountdownButton(): void {\n    this.resumeAutomation();\n  }\n\n  private showOverlay(): void {\n    this.isOverlayShown = true;\n    this.overlayServerService.showLowerThird(this.selectedOverlay);\n  }\n\n  private hideOverlay(): void {\n    this.isOverlayShown = false;\n    this.overlayServerService.hideLowerThird(this.selectedOverlay);\n  }\n\n  private startAutomation(): void {\n    // copy automation time to curren tautomation time\n    this.currentAutomationDuration = new Date(\n      this.automationDuration.getTime()\n    );\n\n    // copy automation time to curren remaining time\n    this.currentRemainingAutomationTime = new Date(\n      this.currentAutomationDuration.getTime()\n    );\n\n    // set curren tautomation start time\n    this.currentAutomationStartTime = new Date();\n\n    // set automation running\n    this.isAutomationActive = true;\n    this.isAutomationPaused = false;\n    this.showOverlay();\n\n    // start automation runner\n    requestAnimationFrame(() => this.updateAutomation());\n  }\n\n  private updateAutomation(): void {\n    // exect only when automation is still running\n    if (this.isAutomationActive && !this.isAutomationPaused) {\n      const currentTime = new Date();\n      // calculate remaining time\n      this.currentRemainingAutomationTime.setTime(\n        this.automationDuration.getTime() -\n          (currentTime.getTime() - this.currentAutomationStartTime.getTime())\n      );\n\n      // calculate percentage progress\n      this.currentAutomationProgress =\n        (this.currentRemainingAutomationTime.getTime() /\n          this.automationDuration.getTime()) *\n        100;\n\n      this.generateTimeString();\n\n      // control automation runner – repeat or stop\n      if (this.currentRemainingAutomationTime.getTime() > 0) {\n        requestAnimationFrame(() => this.updateAutomation());\n      } else {\n        this.stopAutomation();\n      }\n    }\n  }\n\n  private pauseAutomation(): void {\n    this.isAutomationPaused = true;\n  }\n\n  private resumeAutomation(): void {\n    this.isAutomationPaused = false;\n    this.currentAutomationStartTime.setTime(\n      new Date().getTime() -\n        (this.currentAutomationDuration.getTime() -\n          this.currentRemainingAutomationTime.getTime())\n    );\n    requestAnimationFrame(() => this.updateAutomation());\n  }\n\n  private stopAutomation(): void {\n    this.hideOverlay();\n    this.resetAutomation();\n  }\n\n  private resetAutomation(): void {\n    this.isAutomationPaused = false;\n    this.isAutomationActive = false;\n    this.currentRemainingAutomationTime = new Date(\n      this.automationDuration.getTime()\n    );\n    this.currentAutomationProgress = 100;\n    this.generateTimeString();\n  }\n\n  public onClickShowButton(): void {\n    this.showOverlay();\n  }\n\n  public onClickHideButton(): void {\n    this.hideOverlay();\n    this.resetAutomation();\n  }\n}\n","<h5>{{ \"Live Control\" | translate }}</h5>\n<div class=\"panel\">\n  <div class=\"panel-body\">\n    <span class=\"btn-group\">\n      <button class=\"btn btn-primary\" (click)=\"onClickShow10Button()\" *ngIf=\"!isAutomationActive\">\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-camera-timer theme--dark\"\n        ></i>\n        {{ \"Zeige 10 Sekunden\" | translate }}\n      </button>\n      <button\n        class=\"btn btn-warning\"\n        *ngIf=\"isAutomationActive && !isAutomationPaused\"\n        (click)=\"onClickPauseCountdownButton()\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-pause theme--dark\"\n        ></i>\n      </button>\n      <button\n        class=\"btn btn-warning\"\n        *ngIf=\"isAutomationActive && isAutomationPaused\"\n        (click)=\"onClickResumeCountdownButton()\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-play theme--dark\"\n        ></i>\n      </button>\n    </span>\n    <span class=\"float-right btn-group\">\n      <button\n        class=\"btn btn-success\"\n        (click)=\"onClickShowButton()\"\n        *ngIf=\"!isOverlayShown\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-play theme--dark\"\n        ></i>\n        {{ \"Einblenden\" | translate }}\n      </button>\n      <button class=\"btn btn-danger\" (click)=\"onClickHideButton()\" *ngIf=\"isOverlayShown\">\n        <i\n          aria-hidden=\"true\"\n          class=\"v-icon notranslate mdi mdi-stop theme--dark\"\n        ></i>\n        {{ \"Ausblenden\" | translate }}\n      </button></span\n    >\n  </div>\n  <div class=\"progressBar\">\n    <div class=\"time\">Dauer {{ currentRemainingAutomationTimeString }}</div>\n    <div class=\"bar\" [class.active]=\"isAutomationActive\" [style.width.%]=\"currentAutomationProgress\"></div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IOverlay } from 'src/app/models/ioverlay';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\n\n@Component({\n  selector: 'app-overlay-preview',\n  templateUrl: './overlay-preview.component.html',\n  styleUrls: ['./overlay-preview.component.css'],\n})\nexport class OverlayPreviewComponent implements OnInit {\n  @Input() selectedOverlay: IOverlay;\n\n  constructor(public overlayServerService: OverlayServerService) {}\n\n  ngOnInit(): void {}\n}\n","<h5>{{ \"Vorschau\" | translate }}</h5>\n<ng-container *ngFor=\"let channel of overlayServerService.channels\">\n  <div class=\"btn-group\">\n    <button type=\"menu\" class=\"btn btn-secondary\">{{ channel.title }}</button>\n  </div>\n</ng-container>\n<div class=\"previews tab-content\">\n  <div\n    id=\"preview0\"\n    class=\"preview tab-pane active embed-responsive embed-responsive-16by9\"\n  >\n    <object data=\"http://localhost:4200\" width=\"1920\" height=\"1080\">\n      <embed src=\"http://localhost:4200\" width=\"1920\" height=\"1080\" />\n      Error: Preview could not be displayed.\n    </object>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  overlayServerHost = \"localhost\"\n  overlayServerPort = 0\n  overlayServerAuthCode = \"\"\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"left-column\">\n    <div class=\"header\">\n        <h5>Einstellungen</h5>\n    </div>\n    <div class=\"panel\">\n        <div class=\"panel-body\">\n            <div class=\"form-group\">\n                <label for=\"title\">{{ \"Hostname\" | translate }}</label>\n                <input type=\"name\" class=\"form-control\" id=\"title\"\n                    placeholder=\"Hostname / IP Adresse von overlay-server\" aria-describedby=\"nameHelp\"\n                    [(ngModel)]=\"overlayServerHost\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"title\">{{ \"Port\" | translate }}</label>\n                <input type=\"number\" class=\"form-control\" id=\"title\" placeholder=\"Port\" aria-describedby=\"nameHelp\"\n                    [(ngModel)]=\"overlayServerPort\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"title\">{{ \"AuthCode\" | translate }}</label>\n                <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"AuthCode\" aria-describedby=\"nameHelp\"\n                    [(ngModel)]=\"overlayServerAuthCode\" />\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { OverlayServerService } from 'src/app/shared/services/overlay-server/overlay-server.service';\nimport { Status } from './status';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.scss'],\n})\nexport class StatusComponent implements OnInit, OnDestroy {\n  status: Status[] = [\n    {\n      service: 'Overlay Server',\n      status: 'connecting',\n    },\n    {\n      service: 'Livestream Software OBS',\n      status: 'connecting',\n    },\n  ];\n\n  private overlayServerStatusSubscription: Subscription;\n\n  constructor(private overlayServerService: OverlayServerService) {}\n\n  ngOnInit(): void {\n    this.subscribeToStates();\n  }\n\n  ngOnDestroy(): void {\n    this.overlayServerStatusSubscription.unsubscribe();\n  }\n\n  subscribeToStates(): void {\n    this.overlayServerStatusSubscription = this.overlayServerService.serverAvailable.subscribe(\n      (status) => {\n        const overlayServerStatus = this.status.filter(\n          (data) => data.service === 'Overlay Server'\n        )[0];\n        overlayServerStatus.status = status ? 'online' : 'offline';\n      }\n    );\n  }\n}\n","<li class=\"nav-item\" *ngFor=\" let s of status\" title=\"{{ s.status }}\">\n    <a class=\"nav-link\"><i aria-hidden=\"true\" class=\"v-icon notranslate mdi mdi-circle {{ s.status }} theme--dark\"></i> {{ s.service }}</a>\n</li>\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button-tile',\n  templateUrl: './button-tile.component.html',\n  styleUrls: ['./button-tile.component.scss'],\n})\nexport class ButtonTileComponent implements OnInit {\n  @Input() id: string;\n  @Input() title: string;\n  @Input() placeholderTitle: string;\n  @Input() subtitle: string;\n  @Input() placeholderSubtitle: string;\n  @Input() selected: boolean;\n  @Input() favorite: boolean;\n  @Input() pinned: boolean;\n  @Input() readOnly: boolean;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<button\n  [class.selected]=\"selected\"\n  class=\"list-group-item overlay-list-item text-left\"\n>\n  <div class=\"title\">\n    <ng-container *ngIf=\"title\">\n      {{ title }}\n    </ng-container>\n    <ng-container *ngIf=\"!title\">\n      {{ placeholderTitle }}\n    </ng-container>\n  </div>\n  <div class=\"subtitle\">\n    <ng-container *ngIf=\"subtitle\">\n      {{ subtitle }}\n    </ng-container>\n    <ng-container *ngIf=\"!subtitle\">\n      {{ placeholderSubtitle }}\n    </ng-container>\n  </div>\n  <div class=\"icons\">\n    <div class=\"favorite\" *ngIf=\"favorite\">\n      <i\n        *ngIf=\"favorite\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-heart theme--dark\"\n      ></i>\n      <i\n        *ngIf=\"!favorite\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-heart-outline theme--dark\"\n      ></i>\n    </div>\n    <div class=\"pinned\" *ngIf=\"pinned\">\n      <i\n        *ngIf=\"pinned\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-pin theme--dark\"\n      ></i>\n      <i\n        *ngIf=\"!pinned\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-pin-outline theme--dark\"\n      ></i>\n    </div>\n    <div class=\"readOnly\" *ngIf=\"readOnly\">\n      <i\n        *ngIf=\"readOnly\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-lock theme--dark\"\n      ></i>\n      <i\n        *ngIf=\"!readOnly\"\n        aria-hidden=\"true\"\n        class=\"v-icon notranslate mdi mdi-lock-outline theme--dark\"\n      ></i>\n    </div>\n  </div>\n</button>\n","import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'app-toggle-switch',\n  templateUrl: './toggle-switch.component.html',\n  styleUrls: ['./toggle-switch.component.scss'],\n})\nexport class ToggleSwitchComponent {\n  @Input() title: string;\n  @Input() isChecked: boolean;\n  @Output() isCheckedChange = new EventEmitter<boolean>();\n  @Input() description: string;\n  @Input() disabled = false;\n\n  constructor() {}\n\n  public onUserClickedLabel(): void {\n    if (!this.disabled) {\n      this.isChecked = !this.isChecked;\n      this.isCheckedChange.emit(this.isChecked);\n    }\n  }\n\n  onChanged($event): void {\n    this.isChecked = $event && $event.target && $event.target.checked;\n    this.isCheckedChange.emit(this.isChecked);\n  }\n}\n","<label class=\"switch\">\n  <input type=\"checkbox\" [(ngModel)]=\"isChecked\" (change)=\"onChanged($event)\" [disabled]=\"disabled\">\n  <span class=\"slider round\"></span>\n</label>\n<div class=\"label\" (click)=\"onUserClickedLabel()\" [class.disabled]=\"disabled\">\n  <span class=\"title\">{{ title }}</span>\n  <span class=\"description\">{{ description }}</span>\n</div>\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Input } from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\n\ntype Options = {\n  element: any;\n  keys: string;\n};\n\n@Injectable({ providedIn: 'root' })\nexport class HotkeyService {\n  defaults: Partial<Options> = {\n    element: this.document,\n  };\n\n  @Input() lockTypingHotkeys = false;\n\n  constructor(\n    private eventManager: EventManager,\n    @Inject(DOCUMENT) private document: Document\n  ) {}\n\n  addShortcut(\n    options: Partial<Options>,\n    preventDefault = true,\n    deactivateWhenTypingHotkeyAreInUse = false\n  ): Observable<unknown> {\n    const merged = { ...this.defaults, ...options };\n    const event = `keydown.${merged.keys}`;\n\n    return new Observable((observer) => {\n      const handler = (e) => {\n        if (preventDefault) {\n          e.preventDefault();\n        }\n        if (!(deactivateWhenTypingHotkeyAreInUse && this.lockTypingHotkeys)) {\n          observer.next(e);\n        }\n      };\n\n      const dispose = this.eventManager.addEventListener(\n        merged.element,\n        event,\n        handler\n      );\n\n      return () => {\n        dispose();\n      };\n    });\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { IOverlay } from 'src/app/models/ioverlay';\nimport { IChannel } from 'src/app/models/ichannel';\nimport { Subject, Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OverlayServerService {\n  public overlays: IOverlay[] = [];\n  public channels: IChannel[] = [];\n\n  public draftOverlay: IOverlay;\n\n  private getOverlaysSubscription: Subscription;\n  private addedOwnOverlaysSubscription: Subscription;\n\n  public serverAvailable: Subject<boolean> = new Subject();\n\n  public overlayWasDeletedWithId: EventEmitter<string> = new EventEmitter();\n  public newCreatedOverlay: EventEmitter<IOverlay> = new EventEmitter();\n\n  constructor(private socket: Socket) {\n    this.startConnectionMonitoring();\n  }\n\n  private startConnectionMonitoring(): void {\n    // on connection\n    this.socket.fromEvent('connect').subscribe((observer) => {\n      console.log('Successfully connected to Websocket Server');\n      this.serverAvailable.next(true);\n      this.subscribeToLowerThirds();\n      this.subscribeToOwnAddedOverlays();\n\n      this.getChannels().then((data) => (this.channels = data));\n    });\n\n    // on disconnect\n    this.socket.fromEvent('disconnect').subscribe((observer) => {\n      this.serverAvailable.next(false);\n      console.error(\n        'Lost connection to Websocket Server - Reason: ' + observer\n      );\n\n      // unsubscribe from all observables\n      // this.getOverlaysSubscription.unsubscribe();\n      // this.addedOwnOverlaysSubscription.unsubscribe();\n    });\n  }\n\n  private subscribeToLowerThirds(): void {\n    if (!this.getOverlaysSubscription) {\n      this.getOverlaysSubscription = this.socket\n        .fromEvent<any[]>('get_lowerthirds')\n        .subscribe((lowerThirdsUpdate) => {\n          const parsedLowerThirdsUpdate = this.parseLowerThirds(\n            lowerThirdsUpdate\n          );\n          this.syncLowerThirdUpdate(parsedLowerThirdsUpdate);\n        });\n    }\n  }\n\n  private syncLowerThirdUpdate(lowerThirdsUpdate: IOverlay[]): void {\n    // delete lower thirds that need to be deleted\n    const toBeDeletedLowerThirds = lowerThirdsUpdate.filter(\n      (lowerThird) => lowerThird.deleted\n    );\n    toBeDeletedLowerThirds.forEach((toBeDeletedLowerThird) => {\n      this.overlayWasDeletedWithId.emit(toBeDeletedLowerThird.id);\n      this.overlays = this.overlays.filter((overlay) => {\n        return overlay.id !== toBeDeletedLowerThird.id;\n      });\n    });\n\n    // add or update the rest\n    const newOrUpdatedlowerThirds = lowerThirdsUpdate.filter(\n      (overlay) => !overlay.deleted\n    );\n\n    newOrUpdatedlowerThirds.forEach((newOrUpdatedOverlay) => {\n      let wasUpdated = false;\n      this.overlays.forEach((overlay, index) => {\n        if (overlay.id === newOrUpdatedOverlay.id) {\n          Object.assign(this.overlays[index], newOrUpdatedOverlay);\n          wasUpdated = true;\n        }\n      });\n\n      if (!wasUpdated) {\n        this.overlays.push(newOrUpdatedOverlay);\n      }\n    });\n  }\n\n  public updateLowerThird(data: IOverlay): void {\n    this.socket.emit('update_lowerthird', data);\n  }\n\n  public addLowerThird(data: IOverlay): void {\n    this.socket.emit('add_lowerthird', data);\n  }\n\n  private subscribeToOwnAddedOverlays(): void {\n    this.addedOwnOverlaysSubscription = this.socket\n      .fromEvent<any>('add_lowerthird')\n      .subscribe((data) => {\n        const newlyCreatedOverlay = this.parseLowerThirds([data])[0];\n        this.overlays.push(newlyCreatedOverlay);\n        this.newCreatedOverlay.emit(newlyCreatedOverlay);\n      });\n  }\n\n  public removeLowerThird(data: IOverlay): void {\n    this.socket.emit('remove_lowerthird', data);\n  }\n\n  public showLowerThird(lowerThird: IOverlay): void {\n    this.socket.emit('content', {\n      type: 'lowerThird',\n      content: {\n        action: 'show',\n        element: lowerThird,\n      },\n    });\n  }\n\n  public hideLowerThird(lowerThird: IOverlay): void {\n    this.socket.emit('content', {\n      type: 'lowerThird',\n      content: {\n        action: 'hide',\n        element: lowerThird,\n      },\n    });\n  }\n\n  private parseLowerThirds(lowerThirds: any[]): IOverlay[] {\n    return lowerThirds.map((element) => {\n      const parsed = {};\n      Object.assign(parsed, element);\n      return parsed as IOverlay;\n    });\n  }\n\n  public getChannels(): Promise<IChannel[]> {\n    return this.socket\n      .fromOneTimeEvent<any[]>('get_channels')\n      .then((channels) => this.parseChannels(channels));\n  }\n\n  private parseChannels(channels: any[]): IChannel[] {\n    return channels.map((element) => {\n      const parsed = {};\n      Object.assign(parsed, element);\n      return parsed as IChannel;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}